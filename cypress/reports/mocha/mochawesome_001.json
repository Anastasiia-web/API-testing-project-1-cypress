{
  "stats": {
    "suites": 5,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2023-12-17T19:15:47.043Z",
    "end": "2023-12-17T19:15:49.574Z",
    "duration": 2531,
    "testsRegistered": 4,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "66176155-177c-404a-b0b2-0ba510f7733b",
      "title": "",
      "fullFile": "cypress\\e2e\\Products\\GETProdutos.cy.js",
      "file": "cypress\\e2e\\Products\\GETProdutos.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7c906c31-78fa-4562-be95-8296615db9ff",
          "title": "Given Products api",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3c453bf3-21d2-447c-a6b6-2940a28a42ee",
              "title": "When I send GET /produtos",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Then it should return a list with all products",
                  "fullTitle": "Given Products api When I send GET /produtos Then it should return a list with all products",
                  "timedOut": null,
                  "duration": 335,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/produtos'\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.quantidade).to.eq(17);\n  expect(response.body).to.haveOwnProperty('produtos').and.not.empty;\n  expect(response.body.produtos.length).to.be.eq(17);\n  expect(response.body.produtos[0]).to.have.all.keys('nome', 'preco', 'descricao', 'quantidade', '_id');\n  cy.writeFile('cypress/fixtures/product.json', response.body.produtos[0]);\n});",
                  "err": {
                    "message": "AssertionError: expected 2 to equal 17",
                    "estack": "AssertionError: expected 2 to equal 17\n    at Context.eval (webpack://api-testing-project-1-cypress/./cypress/e2e/Products/GETProdutos.cy.js:12:56)",
                    "diff": "- 2\n+ 17\n"
                  },
                  "uuid": "d718634a-5a38-4b2e-b2f4-8566c4c8d398",
                  "parentUUID": "3c453bf3-21d2-447c-a6b6-2940a28a42ee",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "98f282ab-ac85-4696-9aed-78de5013e43d",
                  "title": "When I send GET /produtos passing id query param",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Then it should return only the filtered product",
                      "fullTitle": "Given Products api When I send GET /produtos When I send GET /produtos passing id query param Then it should return only the filtered product",
                      "timedOut": null,
                      "duration": 193,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.fixture('product.json').then(product => {\n  const productId = product._id;\n  cy.request(`/produtos?_id=${productId}`).then(response => {\n    expect(response.status).to.eq(200);\n    expect(response.body).to.haveOwnProperty(\"produtos\");\n    expect(response.body.produtos).have.length(1);\n    expect(response.body.produtos).to.be.an('array');\n    expect(JSON.stringify(product)).to.eq(JSON.stringify(response.body.produtos[0]));\n    expect(productId).to.eq(response.body.produtos[0]._id); // validating using features file     \n  });\n});",
                      "err": {},
                      "uuid": "6b525749-7e54-4978-bba2-ef9a99893b99",
                      "parentUUID": "98f282ab-ac85-4696-9aed-78de5013e43d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6b525749-7e54-4978-bba2-ef9a99893b99"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 193,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [
                "d718634a-5a38-4b2e-b2f4-8566c4c8d398"
              ],
              "pending": [],
              "skipped": [],
              "duration": 335,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "acdb15b5-0ee9-4c69-9465-07ccbdccf93f",
              "title": "When I do not pass id param into GET /produtos",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Then it should return an empty array",
                  "fullTitle": "Given Products api When I do not pass id param into GET /produtos Then it should return an empty array",
                  "timedOut": null,
                  "duration": 179,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request(`/produtos?_id=null`).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.haveOwnProperty(\"produtos\");\n  expect(response.body.produtos).to.be.empty;\n});",
                  "err": {},
                  "uuid": "85a148d2-2c8b-4031-a8c3-0d0d59e9122d",
                  "parentUUID": "acdb15b5-0ee9-4c69-9465-07ccbdccf93f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "85a148d2-2c8b-4031-a8c3-0d0d59e9122d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 179,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "43451986-cd3f-4209-be70-d91945f2ad83",
              "title": "When I intercept the response",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a product from my-product.json file",
                  "fullTitle": "Given Products api When I intercept the response should return a product from my-product.json file",
                  "timedOut": null,
                  "duration": 1676,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('GET', '/produtos', {\n  fixture: 'my-product.json'\n}).as('h');\ncy.visit('https://serverest.dev');\ncy.get('#operations-Produtos-get_produtos > .opblock-summary > .opblock-summary-control > .opblock-summary-method').click();\ncy.get('.try-out > .btn').click();\ncy.get('.execute-wrapper > .btn').click();\ncy.wait('@h').its('response').then(response => {\n  cy.wrap(response).its('statusCode').should('eq', 200);\n  cy.wrap(response).its('body._id').should('eq', 'My-BeeJh5lz3k6kSIzA');\n});",
                  "err": {},
                  "uuid": "3bae6332-1655-4c41-a8da-eb7b40b43f35",
                  "parentUUID": "43451986-cd3f-4209-be70-d91945f2ad83",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3bae6332-1655-4c41-a8da-eb7b40b43f35"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1676,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}