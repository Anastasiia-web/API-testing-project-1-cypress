{
  "stats": {
    "suites": 4,
    "tests": 3,
    "passes": 0,
    "pending": 0,
    "failures": 3,
    "start": "2023-12-17T19:15:50.902Z",
    "end": "2023-12-17T19:15:51.632Z",
    "duration": 730,
    "testsRegistered": 3,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "072935a9-e868-4218-9464-eece082040ae",
      "title": "",
      "fullFile": "cypress\\e2e\\Users\\GETUsuarios.cy.js",
      "file": "cypress\\e2e\\Users\\GETUsuarios.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5a1178ec-19c6-4bb5-9786-83465ce65fff",
          "title": "Given the Users api",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "aeef4568-900e-4e07-9b87-da2978faa806",
              "title": "When I send GET /usuarios",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Then it should return a list with all registered users",
                  "fullTitle": "Given the Users api When I send GET /usuarios Then it should return a list with all registered users",
                  "timedOut": null,
                  "duration": 352,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/usuarios'\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.haveOwnProperty('quantidade');\n  expect(response.body).to.haveOwnProperty('usuarios').and.not.empty;\n  expect(response.body.quantidade).to.eq(response.body.usuarios.length);\n  // iterating via array\n  Cypress._.each(response.body.usuarios, usuario => {\n    expect(usuario).to.have.all.keys('nome', 'email', 'password', 'administrador', '_id');\n    expect(usuario.email).to.not.be.null;\n  });\n  // setting task           \n  const userId = response.body.usuarios[1]._id;\n  cy.task('setItem', {\n    name: 'userId',\n    value: userId\n  });\n  // recording data to json file\n  cy.exec(`echo ${JSON.stringify(response.body.usuarios[1])} >cypress/fixtures/user.json`);\n});",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading '_id')",
                    "estack": "TypeError: Cannot read properties of undefined (reading '_id')\n    at Context.eval (webpack://api-testing-project-1-cypress/./cypress/e2e/Users/GETUsuarios.cy.js:26:55)",
                    "diff": null
                  },
                  "uuid": "6b4ed158-cf66-4306-accb-556012781dbc",
                  "parentUUID": "aeef4568-900e-4e07-9b87-da2978faa806",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "6b4ed158-cf66-4306-accb-556012781dbc"
              ],
              "pending": [],
              "skipped": [],
              "duration": 352,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "dd13ec46-410e-452c-9a7a-6b052edc820a",
              "title": "When I send GET /usuarios passing id",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Then it should return only the filtered user",
                  "fullTitle": "Given the Users api When I send GET /usuarios passing id Then it should return only the filtered user",
                  "timedOut": null,
                  "duration": 131,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const userIdTask = cy.get('@userId');\ncy.fixture('user.json').then(user => {\n  const userIdFile = user._id;\n  cy.request(`/usuarios?_id=${userIdFile}`).then(response => {\n    expect(response.status).to.eq(200);\n    expect(JSON.stringify(user)).to.eq(JSON.stringify(response.body.usuarios[0]));\n    expect(userIdFile).to.eq(response.body.usuarios[0]._id); // validating using features file\n    userIdTask.should('equal', userIdFile); // validatingusing task         \n  });\n});",
                  "err": {
                    "message": "CypressError: `cy.task('getItem')` failed with the following error:\n\nThe task 'getItem' returned undefined. You must return a value, null, or a promise that resolves to a value or null to indicate that the task was handled.\n\nThe task handler was:\n\ngetItem (name) {\n            if (name in items) {\n              return items[name]\n            }\n          }\n\nFix this in your setupNodeEvents method here:\nC:\\Users\\I742339\\Desktop\\API\\cypress-repo-1\\API-testing-project-1-cypress\\cypress.config.js\n\nhttps://on.cypress.io/api/task\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `When I send GET /usuarios p...`",
                    "estack": "CypressError: `cy.task('getItem')` failed with the following error:\n\nThe task 'getItem' returned undefined. You must return a value, null, or a promise that resolves to a value or null to indicate that the task was handled.\n\nThe task handler was:\n\ngetItem (name) {\n            if (name in items) {\n              return items[name]\n            }\n          }\n\nFix this in your setupNodeEvents method here:\nC:\\Users\\I742339\\Desktop\\API\\cypress-repo-1\\API-testing-project-1-cypress\\cypress.config.js\n\nhttps://on.cypress.io/api/task\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `When I send GET /usuarios p...`\n    at <unknown> (https://serverest.dev/__cypress/runner/cypress_runner.js:135695:72)\n    at tryCatcher (https://serverest.dev/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://serverest.dev/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://serverest.dev/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://serverest.dev/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://serverest.dev/__cypress/runner/cypress_runner.js:1697:18)\n    at _drainQueueStep (https://serverest.dev/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (https://serverest.dev/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (https://serverest.dev/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (https://serverest.dev/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://api-testing-project-1-cypress/./cypress/e2e/Users/GETUsuarios.cy.js:41:11)",
                    "diff": null
                  },
                  "uuid": "e90e6169-da7c-41a6-b40c-9f82f830f56c",
                  "parentUUID": "dd13ec46-410e-452c-9a7a-6b052edc820a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "e90e6169-da7c-41a6-b40c-9f82f830f56c"
              ],
              "pending": [],
              "skipped": [],
              "duration": 131,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "836146c9-df42-4896-b07d-9e343120bf11",
              "title": "When I send GET /usuarios passing id query param",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Then it should return only the filtered user",
                  "fullTitle": "Given the Users api When I send GET /usuarios passing id query param Then it should return only the filtered user",
                  "timedOut": null,
                  "duration": 149,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('@userId').then(id => {\n  cy.request({\n    method: 'GET',\n    url: 'https://serverest.dev/usuarios',\n    qs: {\n      _id: `${id}`\n    }\n  }).should(response => {\n    expect(response.status).to.eq(200);\n    expect(response.body.usuarios[0]._id).to.eq(`${id}`);\n  });\n});",
                  "err": {
                    "message": "CypressError: `cy.task('getItem')` failed with the following error:\n\nThe task 'getItem' returned undefined. You must return a value, null, or a promise that resolves to a value or null to indicate that the task was handled.\n\nThe task handler was:\n\ngetItem (name) {\n            if (name in items) {\n              return items[name]\n            }\n          }\n\nFix this in your setupNodeEvents method here:\nC:\\Users\\I742339\\Desktop\\API\\cypress-repo-1\\API-testing-project-1-cypress\\cypress.config.js\n\nhttps://on.cypress.io/api/task\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `When I send GET /usuarios p...`",
                    "estack": "CypressError: `cy.task('getItem')` failed with the following error:\n\nThe task 'getItem' returned undefined. You must return a value, null, or a promise that resolves to a value or null to indicate that the task was handled.\n\nThe task handler was:\n\ngetItem (name) {\n            if (name in items) {\n              return items[name]\n            }\n          }\n\nFix this in your setupNodeEvents method here:\nC:\\Users\\I742339\\Desktop\\API\\cypress-repo-1\\API-testing-project-1-cypress\\cypress.config.js\n\nhttps://on.cypress.io/api/task\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `When I send GET /usuarios p...`\n    at <unknown> (https://serverest.dev/__cypress/runner/cypress_runner.js:135695:72)\n    at tryCatcher (https://serverest.dev/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://serverest.dev/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://serverest.dev/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://serverest.dev/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://serverest.dev/__cypress/runner/cypress_runner.js:1697:18)\n    at _drainQueueStep (https://serverest.dev/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (https://serverest.dev/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (https://serverest.dev/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (https://serverest.dev/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://api-testing-project-1-cypress/./cypress/e2e/Users/GETUsuarios.cy.js:61:9)",
                    "diff": null
                  },
                  "uuid": "b0f9b4cf-360b-4fb0-a1c3-0e767c039e45",
                  "parentUUID": "836146c9-df42-4896-b07d-9e343120bf11",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "b0f9b4cf-360b-4fb0-a1c3-0e767c039e45"
              ],
              "pending": [],
              "skipped": [],
              "duration": 149,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}